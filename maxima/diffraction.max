

/* get fourier transform of a rectangle with size a and area 1
trigsimp(demoivre(integrate(exp(-%i*x*k)/a,x,-a/2,a/2))); */
/* result: sin(a k/2)/(a k/2) = sinc(k a/2) */

/* (local-set-key "\C-\M-x" maxima-send-form) */

/* calculate normalized diffraction spectrum */
intens(N,NN):=block([xylist,ma],
  xylist:makelist(
    block([dx:16,
      kx:2*(k*1.0/NN-.5)],
      [kx, cabs(sum(exp(%i*kx*p*dx),p,-floor(N/2),floor(N/2)+1))^2])
    ,k,NN),
  ma:lmax(map(second,xylist)),
  maplist(lambda([xy],[first(xy),second(xy)/ma]),xylist));

compile(intens);

/*
showtime : true;
*/
FINAL:10;
int_big : intens(20,25*FINAL)$
int_mid : intens(4,20*FINAL)$
int_small:intens(1,9*FINAL)$

secondmap(f,xylist):=map(lambda([xy],[first(xy),apply(f,[second(xy)])]),xylist);

map(set_plot_option,
  [[plot_format,gnuplot],
  [gnuplot_term,"pdfcairo size 6.7cm,5cm rounded enhanced font 'Helvetica,6'"],
  [gnuplot_out_file,"build/diffraction_lines.pdf"],
/*    [gnuplot_out_file,"| epstopdf --filter --outfile=build/diffraction_lines.pdf"],*/
  [gnuplot_preamble,"set border 3 lw 2;set grid;unset ytics;unset key; set label \"N=1\" at 0.1,3.1;set label \"N=4\" at 0.1,1.6;set label \"N=20\" at 0.05,.5;"]])$

plot2d([[discrete,secondmap(lambda([y],2.3+y),int_small)],
  [discrete,secondmap(lambda([y],1.2+y),int_mid)],
  [discrete,secondmap(lambda([y],.1+y),int_big)]],
  [style,[lines,6]],
  [color,black],
  [y,0,3.4],
  [xlabel,"k_x"],
  [ylabel,"intensity"])$

/* N mirrors of width and pitch dx, with tilt k_p estimate fourier spectrum at kx */
sinc(x) := if x=0 then 1.0 else sin(x)/x$
four(N,kx,dx,kp):=cabs(sum(exp(1.0*%i*kx*p*dx)*1.0*sinc(1.0*kx*dx/2+kp),p,-floor(N/2),floor(N/2)+1))^2;
plotfour(N,kp,NN):=block([xylist,ma],
  xylist:makelist(
    block([dx:16,
      kx:2*(k*1.0/NN-.5)],
      [kx, four(N,kx,dx,kp)])
    ,k,NN),
  ma:lmax(map(second,xylist)),
  maplist(lambda([xy],[first(xy),second(xy)/ma]),xylist))$
/* odd mirrors are tilted and even mirrors are flat */
four2(N,kx,dx,kp):=cabs(sum(exp(1.0*%i*kx*p*dx)*1.0*sinc(1.0*kx*dx/2+(if 0=mod(p,2) then 0.0001 else kp)),p,-floor(N/2),floor(N/2)+1))^2;
plotfour2(N,kp,NN):=block([xylist,ma],
  xylist:makelist(
    block([dx:16,
      kx:2*(k*1.0/NN-.5)],
      [kx, four2(N,kx,dx,kp)])
    ,k,NN),
  ma:lmax(map(second,xylist)),
  maplist(lambda([xy],[first(xy),second(xy)/ma]),xylist))$

m_flat : plotfour(20,float(0.0001),25*FINAL)$
m_blaze : plotfour(20,float(%pi),25*FINAL)$
m_mid : plotfour(20,float(1.8),25*FINAL)$
m_hifreq : plotfour2(20,float(%pi),25*FINAL)$
map(set_plot_option,
  [[plot_format,gnuplot],
  [gnuplot_term,"pdfcairo size 6.7cm,5cm rounded enhanced font 'Helvetica,6'"],
  [gnuplot_out_file,"build/diffraction_rects.pdf"],
  [gnuplot_preamble,"set border 3 lw 2;set grid;unset ytics;unset key; set label \"k_p=0\" at 0.1,3.1;set label \"k_p={/Symbol p}\" at 0.1,1.6;set label \"k_p=1.8\" at 0.1,.5; set label \"k_{p/2}=1.8,k_{p/2+1}=0\" at 0.3,-.4;"]])$

plot2d([[discrete,secondmap(lambda([y],2.3+y),m_flat)],
  [discrete,secondmap(lambda([y],1.2+y),m_blaze)],
  [discrete,secondmap(lambda([y],.1+y),m_mid)],
  [discrete,secondmap(lambda([y],-1.1+y),m_hifreq)]], 
  [style,[lines,6]],
  [color,black,black,black,red],
  [xlabel,"k_x"],
  [ylabel,"intensity"])$


map(set_plot_option,
  [[plot_format,gnuplot],
  [gnuplot_term,"pdfcairo size 14.8cm,4cm rounded enhanced font 'Helvetica,6'"],
  [gnuplot_out_file,"build/diffraction_kp.pdf"],
  [gnuplot_preamble,"set border 3 lw 2;set grid;unset key;"]])$

plot2d(sinc(float(%pi)*kp)^2,[kp,-3.5,3.5], [style,[lines,6]], [color,black],
  [y,0,1], [xlabel,"k_p/{/Symbol p}"], [ylabel,"intensity"])$

/*
four1(N,k,dx):=cabs(sum(exp(%i*k*p*dx),p,-floor(N/2),floor(N/2)+1))^2;
plot2d([10*sqrt(four1(2,kx,16)),sqrt(four1(20,kx,16))],[kx,-1,1],[legend,"N=2","N=20"],[style,[lines,8]]);

/* only zero order when all pixels are undeflected */
block([N:20,dx:3],plot2d(cabs(sum(exp(%i*k*p*dx)*sinc(k*dx/2),p,-N/2,N/2+1))^2,[k,-3,3]))$

/* all pixels tilted blaze angle */
block([N:20,dx:16],plot2d(cabs(sum(exp(%i*k*p*dx)*sinc(k*dx/2-%pi),p,-N/2,N/2+1))^2,[k,-1,1]))$

/* half blaze angle */
block([N:20,dx:3],plot2d(cabs(sum(exp(%i*k*p*dx)*sinc(k*dx/2-.2*%pi),p,-N/2,N/2+1))^2,[k,-4.5,4.5]))$


plot2d([four(10,kx,16,.6*%pi),four(10,kx,16,%pi)],[kx,-1,1])$


/* random angle -- fixme doesn't make sense 
block([N:20,dx:3],plot2d(cabs(sum(exp(%i*k*p*dx)*sinc(k*dx/2-random(3.1415)),p,-N/2,N/2+1))^2,[k,-3,8]));
*/

/* intensity in zero order for different tilt angles */
/* kp %pi is blaze angle, kp=4.66 */
block([N:20,dx:3,k:0],plot2d(cabs(sum(exp(%i*k*p*dx)*sinc(k*dx/2-kp),p,-N/2,N/2+1))^2,[kp,0,%pi*2]))$

/* the number of mirrors is not really important */
inten(N,kp,dx,k):=cabs(sum(exp(%i*k*p*dx)*sinc(k*dx/2-kp),p,-N/2,N/2+1))^2$
block([dx:3,k:.99*%pi],plot2d(inten(40,kp,dx,k),[kp,0,%pi*2]))$
*/

